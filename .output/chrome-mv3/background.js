var background=function(){"use strict";var l,d;function h(e){return e==null||typeof e=="function"?{main:e}:e}const m=((d=(l=globalThis.browser)==null?void 0:l.runtime)==null?void 0:d.id)==null?globalThis.chrome:globalThis.browser;async function b(e,s,o,r=null){const n={Authorization:"Basic "+btoa(`${e.username}:${e.password}`)};s==="PUT"&&(n["Content-Type"]="application/json");try{const t=await fetch(o,{method:s,headers:n,body:s==="PUT"?r:null}),u=await t.text();return{status:t.status,statusText:t.statusText,data:u}}catch(t){return{status:t.response?t.response.status:500,statusText:t.message}}}chrome.runtime.onMessage.addListener((e,s,o)=>{const{action:r,url:n,auth:t,method:u,data:p}=e;if(r==="webdavRequest")return b(t,u,n,p).then(c=>o(c)).catch(c=>o({status:500,statusText:c.message})),!0});const g=h(()=>{console.log("Hello background!",{id:m.runtime.id})});chrome.runtime.onMessage.addListener((e,s,o)=>{e.action==="sendData"&&chrome.tabs.query({url:"*://linux.do/*"},r=>{r.forEach(n=>{chrome.tabs.sendMessage(n.id,{action:"setData",data:e.data})})})}),chrome.runtime.onMessage.addListener((e,s,o)=>{if(e.action==="open_bookmark_page"){const n=`chrome-extension://${chrome.runtime.id}/bookmark.html`;chrome.tabs.create({url:n})}});function T(){}function a(e,...s){}const f={debug:(...e)=>a(console.debug,...e),log:(...e)=>a(console.log,...e),warn:(...e)=>a(console.warn,...e),error:(...e)=>a(console.error,...e)};let i;try{i=g.main(),i instanceof Promise&&console.warn("The background's main() function return a promise, but it must be synchronous")}catch(e){throw f.error("The background crashed on startup!"),e}return i}();
background;
